name: Deploy to S3 and Invalidate CloudFront

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build site
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to S3
  run: |
    aws s3 sync dist/ s3://${{ secrets.S3_BUCKET }} \
    --delete \
    --exclude "*" \
    --include "*.html" \
    --include "*.css" \
    --include "*.js" \
    --cache-control "max-age=31536000" \
    --metadata-directive REPLACE

- name: Deploy index.html with no caching
  run: |
    aws s3 cp dist/index.html s3://${{ secrets.S3_BUCKET }}/index.html \
    --cache-control "no-cache" \
    --content-type "text/html" \
    --metadata-directive REPLACE

      - name: Configure S3 website
        run: |
          aws s3 website s3://${{ secrets.S3_BUCKET }}/ --index-document index.html

      - name: Update bucket policy
        run: |
          aws s3api put-bucket-policy --bucket ${{ secrets.S3_BUCKET }} --policy '{
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Sid": "PublicReadGetObject",
                    "Effect": "Allow",
                    "Principal": "*",
                    "Action": "s3:GetObject",
                    "Resource": "arn:aws:s3:::${{ secrets.S3_BUCKET }}/*"
                }
            ]
          }'

      - name: Invalidate CloudFront
        run: |
          aws cloudfront create-invalidation \
            --distribution-id E25JJXN5IK80N1 \
            --paths "/*"
